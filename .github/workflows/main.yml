name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # allow manual runs
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      matrix:
        node: [16]
        package: ["chain", "deadline"]
    steps:
      - uses: actions/checkout@v4
      - id: pnpm
        uses: ./.github/actions/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: install deps
        run: pnpm --filter {./packages/${{ matrix.package }}}... install --frozen-lockfile
      - name: build
        run: pnpm --filter {./packages/${{ matrix.package }}}... run build
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    strategy:
      max-parallel: 4
      matrix:
        package: ["chain", "deadline"]
        command: ["test:ci", "lint", "format:check", "type-check", "test:web"]
        node: [ 16 ]
    steps:
      - uses: actions/checkout@v4
      - id: pnpm
        uses: ./.github/actions/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml
      - name: install deps
        run: pnpm --filter {./packages/${{ matrix.package }}}... install --frozen-lockfile
      - name: build deps
        run: pnpm --filter {./packages/${{ matrix.package }}}^... run build
      - name: ${{ matrix.command }}
        run: pnpm --filter {./packages/${{ matrix.package }}} run ${{ matrix.command }}
      - name: coverage
        uses: codecov/codecov-action@v3
        if: matrix.command == 'test:ci' && matrix.node == '16'
        with:
          flags: ${{ matrix.package }}
          files: ./packages/${{ matrix.package }}/coverage/coverage-final.json
  release:
    if: github.ref == 'refs/heads/main'
    needs: ["test", "build"]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: pnpm
        uses: ./.github/actions/setup-pnpm
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: install deps
        run: pnpm install --frozen-lockfile
      - name: build all
        run: pnpm run -r build
      - name: write .npmrc
        run: printf "//registry.npmjs.org/:_authToken=%s" "$NPM_TOKEN" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Changesets
        id: Changesets
        uses: changesets/action@v1
        with:
          publish: pnpm run release
          version: pnpm run version
          title: "Version Packages for Release"
          commit: "release: version packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
